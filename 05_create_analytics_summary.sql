-- Higher Education Alumni Targeting Demo - Create Analytics Summary
-- This script populates the analytics summary table with aggregated data

USE DATABASE HIGHER_ED_DEMO;
USE SCHEMA ALUMNI_TARGETING;

-- Populate the donor analytics summary table
INSERT INTO DONOR_ANALYTICS_SUMMARY (
    ZIP_CODE,
    H3_LEVEL_7,
    H3_LEVEL_8,
    H3_LEVEL_9,
    DONOR_COUNT,
    TOTAL_ANNUAL_DONATIONS,
    TOTAL_CUMULATIVE_DONATIONS,
    AVG_ANNUAL_DONATION,
    AVG_CUMULATIVE_DONATION,
    MAJOR_DONORS_COUNT
)
WITH h3_aggregations AS (
    SELECT
        ZIP_CODE,
        H3_LEVEL_7,
        H3_LEVEL_8,
        H3_LEVEL_9,
        COUNT(*) AS DONOR_COUNT,
        SUM(ANNUAL_DONATION_AMOUNT) AS TOTAL_ANNUAL_DONATIONS,
        SUM(CUMULATIVE_DONATION_AMOUNT) AS TOTAL_CUMULATIVE_DONATIONS,
        ROUND(AVG(ANNUAL_DONATION_AMOUNT), 2) AS AVG_ANNUAL_DONATION,
        ROUND(AVG(CUMULATIVE_DONATION_AMOUNT), 2) AS AVG_CUMULATIVE_DONATION,
        COUNT(CASE WHEN ANNUAL_DONATION_AMOUNT >= 10000 THEN 1 END) AS MAJOR_DONORS_COUNT
    FROM ALUMNI_DONORS
    GROUP BY ZIP_CODE, H3_LEVEL_7, H3_LEVEL_8, H3_LEVEL_9
)
SELECT * FROM h3_aggregations
ORDER BY TOTAL_ANNUAL_DONATIONS DESC;

-- Create additional views for the Streamlit app
CREATE OR REPLACE VIEW DONOR_OVERVIEW AS
SELECT
    COUNT(*) AS TOTAL_DONORS,
    SUM(ANNUAL_DONATION_AMOUNT) AS TOTAL_ANNUAL_DONATIONS,
    SUM(CUMULATIVE_DONATION_AMOUNT) AS TOTAL_CUMULATIVE_DONATIONS,
    ROUND(AVG(ANNUAL_DONATION_AMOUNT), 2) AS AVG_ANNUAL_DONATION,
    ROUND(AVG(CUMULATIVE_DONATION_AMOUNT), 2) AS AVG_CUMULATIVE_DONATION,
    COUNT(CASE WHEN DONOR_SEGMENT = 'Major Donor' THEN 1 END) AS MAJOR_DONORS,
    COUNT(CASE WHEN DONOR_SEGMENT = 'Mid-Level Donor' THEN 1 END) AS MID_LEVEL_DONORS,
    COUNT(CASE WHEN DONOR_SEGMENT = 'Annual Donor' THEN 1 END) AS ANNUAL_DONORS
FROM ALUMNI_DONORS;

-- Create view for graduation year analysis
CREATE OR REPLACE VIEW DONATIONS_BY_GRADUATION_YEAR AS
SELECT
    GRADUATION_YEAR,
    COUNT(*) AS DONOR_COUNT,
    SUM(ANNUAL_DONATION_AMOUNT) AS TOTAL_ANNUAL_DONATIONS,
    SUM(CUMULATIVE_DONATION_AMOUNT) AS TOTAL_CUMULATIVE_DONATIONS,
    ROUND(AVG(ANNUAL_DONATION_AMOUNT), 2) AS AVG_ANNUAL_DONATION,
    ROUND(AVG(AGE), 1) AS AVG_AGE
FROM ALUMNI_DONORS
GROUP BY GRADUATION_YEAR
ORDER BY GRADUATION_YEAR;

-- Create view for zip code analysis
CREATE OR REPLACE VIEW DONATIONS_BY_ZIP_CODE AS
SELECT
    ZIP_CODE,
    COUNT(*) AS DONOR_COUNT,
    SUM(ANNUAL_DONATION_AMOUNT) AS TOTAL_ANNUAL_DONATIONS,
    SUM(CUMULATIVE_DONATION_AMOUNT) AS TOTAL_CUMULATIVE_DONATIONS,
    ROUND(AVG(ANNUAL_DONATION_AMOUNT), 2) AS AVG_ANNUAL_DONATION,
    COUNT(CASE WHEN DONOR_SEGMENT = 'Major Donor' THEN 1 END) AS MAJOR_DONORS,
    ROUND(AVG(LATITUDE), 6) AS CENTER_LATITUDE,
    ROUND(AVG(LONGITUDE), 6) AS CENTER_LONGITUDE
FROM ALUMNI_DONORS
GROUP BY ZIP_CODE
ORDER BY TOTAL_ANNUAL_DONATIONS DESC;

-- Create view for major analysis
CREATE OR REPLACE VIEW DONATIONS_BY_MAJOR AS
SELECT
    MAJOR,
    COUNT(*) AS DONOR_COUNT,
    SUM(ANNUAL_DONATION_AMOUNT) AS TOTAL_ANNUAL_DONATIONS,
    SUM(CUMULATIVE_DONATION_AMOUNT) AS TOTAL_CUMULATIVE_DONATIONS,
    ROUND(AVG(ANNUAL_DONATION_AMOUNT), 2) AS AVG_ANNUAL_DONATION,
    ROUND(AVG(AGE), 1) AS AVG_AGE
FROM ALUMNI_DONORS
GROUP BY MAJOR
ORDER BY TOTAL_ANNUAL_DONATIONS DESC; 